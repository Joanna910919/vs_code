numbers_of_products = int(input())
time_of_assemble = input().split(',')
time_of_package = input().split(',')

int_time_of_assemble = [int(time1) for time1 in time_of_assemble]
int_time_of_package = [int(time2) for time2 in time_of_package]

all_times = []

first_toy = int_time_of_assemble[0] + int_time_of_package[0]
all_times.append(first_toy)

each = 0
idle_sum = 0
minus = 0

for id in range(1, numbers_of_products):
    idle = int_time_of_assemble[id] - int_time_of_package[id - 1]
    idle_sum += max(idle, 0)  # Ensure idle time is not negative

    if idle < 0:
        minus += -idle

    if (int_time_of_assemble[id] - int_time_of_package[id - 1]) < 0:
        each += (0 + int_time_of_package[id])
        minus += -(int_time_of_assemble[id] - int_time_of_package[id - 1])
        all_times.append(each)
    else:
        if minus <= 0:
            each += (int_time_of_assemble[id] - int_time_of_package[id - 1] + int_time_of_package[id])
        else:
            each += (int_time_of_assemble[id] - int_time_of_package[id - 1] + int_time_of_package[id])
            each -= minus
        all_times.append(each)

for j in range(1, numbers_of_products):
    all_times[j] += first_toy

all_times.append(idle_sum + int_time_of_assemble[0])

for time in all_times:
    print(time, end=",")
